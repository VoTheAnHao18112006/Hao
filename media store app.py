import tkinter as tk
from tkinter import messagebox
import sqlite3

#t·∫°o b·∫£ng Media (ch·ª©a s√°ch, phim, nh·∫°c)
def create_table():
    with sqlite3.connect("library.db") as conn:
        conn.execute("""
            CREATE TABLE IF NOT EXISTS Media (
                MediaId INTEGER PRIMARY KEY AUTOINCREMENT,
                Title TEXT NOT NULL,
                Author TEXT NOT NULL,
                Category TEXT NOT NULL, -- S√°ch, Phim, Nh·∫°c
                Genre TEXT NOT NULL,
                CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)

#th√™m m·ª•c m·ªõi
def add_media():
    title = entry_title.get()
    author = entry_author.get()
    genre = entry_genre.get()
    category = selected_category.get()

    if title and author and genre:
        with sqlite3.connect("library.db") as conn:
            conn.execute("INSERT INTO Media (Title, Author, Category, Genre) VALUES (?, ?, ?, ?)",
                         (title, author, category, genre))
        messagebox.showinfo("‚úÖ Th√†nh c√¥ng", f"ƒê√£ th√™m {category.lower()} v√†o th∆∞ vi·ªán!")
        show_media()
        entry_title.delete(0, tk.END)
        entry_author.delete(0, tk.END)
        entry_genre.delete(0, tk.END)
    else:
        messagebox.showwarning("‚ö†Ô∏è Thi·∫øu th√¥ng tin", "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng!")

#hi·ªÉn th·ªã danh s√°ch
def show_media():
    listbox.delete(0, tk.END)
    with sqlite3.connect("library.db") as conn:
        cursor = conn.execute("SELECT * FROM Media")
        for row in cursor:
            info = f"ID:{row[0]} | {row[1]} - {row[2]} [{row[3]} / {row[4]}]"
            listbox.insert(tk.END, info)

#x√≥a m·ª•c ƒë∆∞·ª£c ch·ªçn
def delete_selected():
    selected = listbox.curselection()
    if selected:
        item = listbox.get(selected[0])
        media_id = int(item.split('|')[0].replace("ID:", "").strip())

        confirm = messagebox.askyesno("X√°c nh·∫≠n", "B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a m·ª•c n√†y?")
        if confirm:
            with sqlite3.connect("library.db") as conn:
                conn.execute("DELETE FROM Media WHERE MediaId = ?", (media_id,))
            messagebox.showinfo("üóë ƒê√£ x√≥a", "M·ª•c ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi th∆∞ vi·ªán.")
            show_media()
    else:
        messagebox.showwarning("Ch∆∞a ch·ªçn m·ª•c", "Vui l√≤ng ch·ªçn m·ª•c mu·ªën x√≥a.")

#th·ªëng k√™ s·ªë l∆∞·ª£ng theo lo·∫°i
def show_stats():
    with sqlite3.connect("library.db") as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT Category, COUNT(*) FROM Media GROUP BY Category")
        results = cursor.fetchall()

    if results:
        stat_text = "Th·ªëng k√™ s·ªë l∆∞·ª£ng:\n"
        for category, count in results:
            stat_text += f"‚Ä¢ {category}: {count} m·ª•c\n"
        messagebox.showinfo("Th·ªëng k√™", stat_text)
    else:
        messagebox.showinfo("Th·ªëng k√™", "Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ th·ªëng k√™.")

create_table()
root = tk.Tk()
root.title("üé∂ Qu·∫£n L√Ω Th∆∞ Vi·ªán ƒêa Ph∆∞∆°ng Ti·ªán")
root.geometry("600x550")

#lo·∫°i d·ªØ li·ªáu
selected_category = tk.StringVar()
selected_category.set("S√°ch")  # m·∫∑c ƒë·ªãnh
tk.Label(root, text="Ch·ªçn lo·∫°i:").pack()
tk.OptionMenu(root, selected_category, "S√°ch", "Phim", "Nh·∫°c").pack()

#nh·∫≠p d·ªØ li·ªáu
tk.Label(root, text="T√™n (ti√™u ƒë·ªÅ):").pack()
entry_title = tk.Entry(root, width=50)
entry_title.pack()

tk.Label(root, text="T√°c gi·∫£ / ƒê·∫°o di·ªÖn / Ca sƒ©:").pack()
entry_author = tk.Entry(root, width=50)
entry_author.pack()

tk.Label(root, text="Th·ªÉ lo·∫°i:").pack()
entry_genre = tk.Entry(root, width=50)
entry_genre.pack()

tk.Button(root, text="‚ûï Th√™m", command=add_media, bg="#4CAF50", fg="white").pack(pady=8)
tk.Button(root, text="üóë X√≥a", command=delete_selected, bg="#f44336", fg="white").pack(pady=4)
tk.Button(root, text="üìä Th·ªëng k√™", command=show_stats, bg="#2196F3", fg="white").pack(pady=4)

#hi·ªÉn th·ªã danh s√°ch
listbox = tk.Listbox(root, width=85, height=15)
listbox.pack(pady=10)

show_media()
root.mainloop()

